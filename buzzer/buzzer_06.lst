0000              1   ;buzzer_06.asm: should do a countdown timer & clock. buzzer has been removed
0000              2   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              4   
0000              5   org 0000H
0000 0200EB       6            ljmp myprogram
0003              7            
000B              8   org 000BH
000B 020019       9            ljmp ISR_timer0
000E             10            
0030             11   DSEG at 30H
0030             12   count10ms: ds 1
0031             13   countdown10ms: ds 1
0032             14   sec:   ds 1
0033             15   min:   ds 1
0034             16   hrs:     ds 1
0035             17   meridiem:  ds 1 ;keeps track of am/pm
0036             18   secAlarm: ds 1
0037             19   minAlarm: ds 1
0038             20   hrsAlarm: ds 1
0039             21   meridiemAlarm: ds 1
003A             22   
0000             23   BSEG
0000             24   still12: dbit 1
0001             25   still12Alarm: dbit 1
0002             26   
000E             27   CSEG
000E             28   
000E             29   ; Look-up table for 7-segment displays
000E             30   myLUT:
000E C0F9A4B0    31       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0013 9282F880    32       DB 092H, 082H, 0F8H, 080H, 090H
     90
0018 FF          33       DB 0FFH ; All segments off
0019             34   
0019             35   XTAL           EQU 33333333
0019             36   FREQ_0         EQU 100
0019             37   TIMER0_RELOAD  EQU 65536-(XTAL/(12*FREQ_0)) ;clock
0019             38   
0019             39   ;-----------------------------
0019             40   ;-----------------------------
0019             41   ;-----------------------------
0019             42   ;-----------------------------
0019             43   
0019             44   ISR_Timer0:
0019             45            ; Reload the timer
0019 758C93      46       mov TH0, #high(TIMER0_RELOAD)
001C 758A7F      47       mov TL0, #low(TIMER0_RELOAD)
001F             48       
001F             49       ; Save used register into the stack
001F C0D0        50       push psw
0021 C0F0        51       push b
0023 C0E0        52       push acc
0025 C083        53       push dph
0027 C082        54       push dpl
0029             55       
0029             56   ISR_0:
0029 20E837      57       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
002C             58       
002C             59       ; Increment the counter and check if a second has passed
002C             60       
002C 0530        61            inc count10ms
002E E530        62       mov a, count10ms
0030 B46430      63       cjne A, #100, ISR_Timer0_L0
0033 753000      64       mov count10ms, #0
0036             65       
0036 E532        66       mov a, sec
0038 2401        67       add a, #1
003A D4          68       da a
003B F532        69       mov sec, a
003D B46023      70       cjne A, #60H, ISR_Timer0_L0
0040 753200      71       mov sec, #0
0043             72    
0043 E533        73       mov a, min
0045 2401        74       add a, #1
0047 D4          75       da a
0048 F533        76       mov min, a
004A B46016      77       cjne A, #60H, ISR_Timer0_L0
004D 753300      78       mov min, #0
0050             79   
0050 E534        80       mov a, hrs
0052 2401        81       add a, #1
0054 D4          82       da a
0055 F534        83       mov hrs, a
0057             84       
0057 1201A1      85       lcall checkMeridiem
005A             86       
005A B41306      87       cjne A, #13H, ISR_Timer0_L0
005D 753401      88       mov hrs, #1
0060             89       
0060 20E938      90       jb SWA.1, ISR_Timer_Countdown ;go to countdown
0063             91      
0063             92   ISR_Timer0_L0:
0063             93   
0063             94            ; Update the display.  This happens every 10 ms
0063 90000E      95            mov dptr, #myLUT
0066             96     
0066 853591      97            mov HEX0, meridiem
0069             98            
0069 E532        99            mov a, sec
006B 540F       100            anl a, #0fH
006D 93         101            movc a, @a+dptr
006E F593       102            mov HEX2, a
0070 E532       103            mov a, sec
0072 C4         104            swap a
0073 540F       105            anl a, #0fH
0075 93         106            movc a, @a+dptr
0076 F594       107            mov HEX3, a
0078            108   
0078 E533       109            mov a, min
007A 540F       110            anl a, #0fH
007C 93         111            movc a, @a+dptr
007D F58E       112            mov HEX4, a
007F E533       113            mov a, min
0081 C4         114            swap a
0082 540F       115            anl a, #0fH
0084 93         116            movc a, @a+dptr
0085 F58F       117            mov HEX5, a
0087            118   
0087 E534       119            mov a, hrs
0089 540F       120            anl a, #0fH
008B 93         121            movc a, @a+dptr
008C F596       122            mov HEX6, a
008E E534       123            mov a, hrs
0090 20E402     124            jb acc.4, ISR_Timer0_L1
0093 74A0       125            mov a, #0A0H
0095            126            
0095            127   ISR_Timer0_L1:
0095 C4         128            swap a
0096 540F       129            anl a, #0fH
0098 93         130            movc a, @a+dptr
0099 F597       131            mov HEX7, a
009B            132            
009B            133   ISR_Timer_Countdown:
009B E59E       134            mov a, SWC
009D 5401       135            anl a, #00000001B ;sw 16 is the "start" button
009F 602D       136            jz  ISR_End ;if we haven't pressed start yet, don't countdown
00A1            137   
00A1 1531       138            dec countdown10ms
00A3 E531       139       mov a, countdown10ms
00A5 B46426     140       cjne A, #100, ISR_End
00A8 753100     141       mov countdown10ms, #0
00AB            142       
00AB            143   ;--------- time conditions
00AB E536       144       mov a, secAlarm
00AD 540F       145       anl a, #00FH
00AF B4000D     146       cjne A, #0, regularSec ;can we subtract from lsb seconds?
00B2 E536       147       mov a, secAlarm ;nope, need to borrow
00B4 54F0       148       anl a, #0F0H
00B6 C4         149       swap a
00B7 B4000D     150       cjne a, #0, borrowmsbSec ;can we borrow from msb seconds?
00BA            151            ; nope
00BA            152       ; 00 00 00 CASE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
00BA 75E8FF     153       mov LEDRA, #0FFH ;celebrate with lights! COUNTER DONE
00BD 800F       154       sjmp ISR_End
00BF            155       
00BF            156   regularSec: ; -- -- -- ## case
00BF E536       157            mov a, secAlarm
00C1 9401       158            subb a, #1
00C3 F536       159            mov secAlarm, a
00C5 8007       160            sjmp ISR_END
00C7            161   
00C7            162   borrowmsbSec: ;-- -- #0 case
00C7 9401       163       subb a, #1
00C9 4490       164       orl a, #10010000B
00CB C4         165       swap a
00CC F536       166       mov secAlarm, a
00CE            167            
00CE            168   ;-----------------------
00CE            169   
00CE            170   ISR_End:
00CE            171            ; Restore used registers
00CE D082       172            pop dpl
00D0 D083       173            pop dph
00D2 D0E0       174            pop acc
00D4 D0F0       175            pop b
00D6 D0D0       176            pop psw    
00D8 32         177            reti
00D9            178   
00D9            179   ;--------------------------------------   
00D9            180   ;--------------------------------------   
00D9            181   ;--------------------------------------      
00D9            182   ;--------------------------------------  
00D9            183   
00D9            184   Init_Timer0:     
00D9 758911     185            mov TMOD,  #00010001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
00DC C28C       186            clr TR0 ; Disable timer 0
00DE C28D       187            clr TF0
00E0 758C93     188       mov TH0, #high(TIMER0_RELOAD)
00E3 758A7F     189       mov TL0, #low(TIMER0_RELOAD)
00E6 D28C       190       setb TR0 ; Enable timer 0
00E8 D2A9       191       setb ET0 ; Enable timer 0 interrupt
00EA 22         192       ret
00EB            193   
00EB            194   ;-------------------------------------------------------------------------------------------
00EB            195   ;-------------------------------------------------------------------------------------------
00EB            196   ;-------------------------------------------------------------------------------------------
00EB            197   ;-------------------------------------------------------------------------------------------
00EB            198   ;-------------------------------------------------------------------------------------------
00EB            199   
00EB            200   myprogram:
00EB 75817F     201            mov SP, #7FH
00EE 75E800     202            mov LEDRA,#0
00F1 759500     203            mov LEDRB,#0
00F4 759E00     204            mov LEDRC,#0
00F7 75F800     205            mov LEDG,#0
00FA            206   
00FA 753250     207            mov sec, #50H
00FD 753359     208            mov min, #59H
0100 753411     209            mov hrs, #11H
0103 753508     210            mov meridiem, #08H
0106 C200       211            clr still12
0108            212            
0108 753699     213            mov secAlarm, #99H
010B 753700     214            mov minAlarm, #00H
010E 753800     215            mov hrsAlarm, #00H
0111            216   
0111 1200D9     217            lcall Init_Timer0 ;set up
0114            218            
0114 D2AF       219       setb EA  ; Enable all interrupts
0116            220   
0116            221   M0: ;clock set loop
0116            222   
0116 30EB02     223            jnb SWA.3, M0_Test
0119 C2E9       224            clr LEDRA.1
011B            225            
011B            226   M0_Test:
011B 20E942     227            jb SWA.1, A0 ; countdown set mode
011E 30E8F5     228            jnb SWA.0, M0 ;clock set mode
0121            229            
0121 20FB13     230            jb KEY.3, M1
0124 30FBFD     231       jnb KEY.3, $
0127 E534       232       mov a, hrs
0129 2401       233            add a, #1
012B D4         234            da a
012C F534       235            mov hrs, a
012E 1201A1     236            lcall checkMeridiem
0131 B41303     237       cjne A, #13H, M1
0134 753401     238       mov hrs, #1
0137            239   M1:      
0137 20FA10     240            jb KEY.2, M2
013A 30FAFD     241       jnb KEY.2, $
013D E533       242       mov a, min
013F 2401       243            add a, #1
0141 D4         244            da a
0142 F533       245            mov min, a      
0144 B46003     246       cjne A, #60H, M2
0147 753300     247       mov min, #0
014A            248   M2:      
014A 20F910     249            jb KEY.1, M3
014D 30F9FD     250            jnb KEY.1, $
0150 E532       251            mov a, sec
0152 2401       252            add a, #1
0154 D4         253            da a
0155 F532       254            mov sec, a
0157 B46003     255       cjne A, #60H, M3
015A 753200     256       mov sec, #0
015D            257   M3:      
015D 020116     258            ljmp M0
0160            259            
0160            260   A0: ;countdown set loop
0160 30E9B3     261            jnb SWA.1, M0 
0163 12017F     262            lcall DisplayAlarm
0166            263   A2:      
0166 20F913     264            jb KEY.1, A3
0169            265   secdisp:
0169 12017F     266            lcall DisplayAlarm
016C 30F9FA     267            jnb KEY.1, secdisp
016F E536       268            mov a, secAlarm
0171 2401       269            add a, #1
0173 D4         270            da a
0174 F536       271            mov secAlarm, a
0176 B49903     272       cjne A, #99H, A3
0179 753600     273       mov secAlarm, #0
017C            274   A3:      
017C 020160     275            ljmp A0
017F            276   
017F            277   ;-------------------------------------------------------------------------------------------
017F            278   ;-------------------------------------------------------------------------------------------
017F            279   ;-------------------------------------------------------------------------------------------
017F            280   ;-------------------------------------------------------------------------------------------
017F            281   ; here's all the subroutines called in the main program
017F            282   
017F            283   ;---------------------------for when we display the alarm/countdown      
017F            284   DisplayAlarm:
017F            285            ; Update the display
017F 90000E     286            mov dptr, #myLUT
0182            287            
0182 7591FF     288            mov HEX0, #0FFH ;clear am/pm display
0185 7597C0     289            mov HEX7, #0C0H
0188 7596C0     290            mov HEX6, #0C0H
018B 758FC0     291            mov HEX5, #0C0H
018E 758EC0     292            mov HEX4, #0C0H
0191            293   
0191 E536       294            mov a, secAlarm
0193 540F       295            anl a, #0fH
0195 93         296            movc a, @a+dptr
0196 F593       297            mov HEX2, a
0198 E536       298            mov a, secAlarm
019A C4         299            swap a
019B 540F       300            anl a, #0fH
019D 93         301            movc a, @a+dptr
019E F594       302            mov HEX3, a
01A0            303   
01A0 22         304            ret
01A1            305            
01A1            306   ;-------this checks and changes am/pm
01A1            307   checkMeridiem:
01A1 E534       308            mov a, hrs
01A3 B4120C     309       cjne A, #12H, not12 ;if it isn't 12, leave
01A6            310       
01A6 20000B     311       jb still12, out ;if it is 12 but was previously 12, do nothing
01A9            312         
01A9            313   changeMeridiem: ;if it is 12 but was not previously 12 - now change meridiem
01A9 E535       314            mov a, meridiem
01AB B2E2       315            cpl acc.2 ; changes 08H to 0CH and vice versa
01AD F535       316            mov meridiem, a         
01AF            317            ;display am/pm
01AF 853591     318            mov HEX0, meridiem
01B2            319   not12:
01B2 C200       320            clr still12
01B4            321   out:
01B4 22         322            ret
01B5            323            
01B5            324   END
