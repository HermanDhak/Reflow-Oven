0000              1   ; lab1_04.asm:
0000              2   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              4   
0000              5   org 0000H
0000 0200E5       6            ljmp myprogram
0003              7            
000B              8   org 000BH
000B 020029       9            ljmp ISR_timer0
000E             10            
001B             11   org 001BH
001B 0200B6      12            ljmp ISR_timer1
001E             13            
0030             14   DSEG at 30H
0030             15   count10ms: ds 1
0031             16   sec:   ds 1
0032             17   min:   ds 1
0033             18   hrs:     ds 1
0034             19   meridiem:  ds 1 ;keeps track of am/pm
0035             20   secAlarm: ds 1
0036             21   minAlarm: ds 1
0037             22   hrsAlarm: ds 1
0038             23   meridiemAlarm: ds 1
0039             24   
0000             25   BSEG
0000             26   still12: dbit 1
0001             27   still12Alarm: dbit 1
0002             28   
001E             29   CSEG
001E             30   
001E             31   ; Look-up table for 7-segment displays
001E             32   myLUT:
001E C0F9A4B0    33       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0023 9282F880    34       DB 092H, 082H, 0F8H, 080H, 090H
     90
0028 FF          35       DB 0FFH ; All segments off
0029             36   
0029             37   XTAL           EQU 33333333
0029             38   FREQ_0         EQU 100
0029             39   TIMER0_RELOAD  EQU 65536-(XTAL/(12*FREQ_0)) ;clock
0029             40   FREQ_1              EQU 2000 ;lets face it 2000hz is irritating as hell, 1000hz is way less awful
0029             41   TIMER1_RELOAD  EQU 65536-(XTAL/(12*2*FREQ_1)) ;buzz
0029             42   
0029             43   ;-----------------------------
0029             44   ;-----------------------------
0029             45   ;-----------------------------
0029             46   ;-----------------------------
0029             47   
0029             48   ISR_Timer0:
0029             49            ; Reload the timer
0029 758C93      50       mov TH0, #high(TIMER0_RELOAD)
002C 758A7F      51       mov TL0, #low(TIMER0_RELOAD)
002F             52       
002F             53       ; Save used register into the stack
002F C0D0        54       push psw
0031 C0F0        55       push b
0033 C0E0        56       push acc
0035 C083        57       push dph
0037 C082        58       push dpl
0039             59       
0039             60   ISR_0:
0039 20E837      61       jb SWA.0, ISR_Timer0_L0 ; Setting up time.  Do not increment anything
003C             62       
003C             63       ; Increment the counter and check if a second has passed
003C             64       
003C 0530        65            inc count10ms
003E E530        66       mov a, count10ms
0040 B46430      67       cjne A, #100, ISR_Timer0_L0
0043 753000      68       mov count10ms, #0
0046             69       
0046 E531        70       mov a, sec
0048 2401        71       add a, #1
004A D4          72       da a
004B F531        73       mov sec, a
004D B46023      74       cjne A, #60H, ISR_Timer0_L0
0050 753100      75       mov sec, #0
0053             76    
0053 E532        77       mov a, min
0055 2401        78       add a, #1
0057 D4          79       da a
0058 F532        80       mov min, a
005A B46016      81       cjne A, #60H, ISR_Timer0_L0
005D 753200      82       mov min, #0
0060             83   
0060 E533        84       mov a, hrs
0062 2401        85       add a, #1
0064 D4          86       da a
0065 F533        87       mov hrs, a
0067             88       
0067 12029F      89       lcall checkMeridiem
006A             90       
006A B41306      91       cjne A, #13H, ISR_Timer0_L0
006D 753301      92       mov hrs, #1
0070             93       
0070 20E932      94       jb SWA.1, ISR_Timer0_L1 ;setting up alarm, do not display time
0073             95      
0073             96   ISR_Timer0_L0:
0073             97   
0073             98            ; Update the display.  This happens every 10 ms
0073 90001E      99            mov dptr, #myLUT
0076            100     
0076 853491     101            mov HEX0, meridiem
0079            102            
0079 E531       103            mov a, sec
007B 540F       104            anl a, #0fH
007D 93         105            movc a, @a+dptr
007E F593       106            mov HEX2, a
0080 E531       107            mov a, sec
0082 C4         108            swap a
0083 540F       109            anl a, #0fH
0085 93         110            movc a, @a+dptr
0086 F594       111            mov HEX3, a
0088            112   
0088 E532       113            mov a, min
008A 540F       114            anl a, #0fH
008C 93         115            movc a, @a+dptr
008D F58E       116            mov HEX4, a
008F E532       117            mov a, min
0091 C4         118            swap a
0092 540F       119            anl a, #0fH
0094 93         120            movc a, @a+dptr
0095 F58F       121            mov HEX5, a
0097            122   
0097 E533       123            mov a, hrs
0099 540F       124            anl a, #0fH
009B 93         125            movc a, @a+dptr
009C F596       126            mov HEX6, a
009E E533       127            mov a, hrs
00A0 20E402     128            jb acc.4, ISR_Timer0_L1
00A3 74A0       129            mov a, #0A0H
00A5            130            
00A5            131   ISR_Timer0_L1:
00A5 C4         132            swap a
00A6 540F       133            anl a, #0fH
00A8 93         134            movc a, @a+dptr
00A9 F597       135            mov HEX7, a
00AB            136   
00AB            137   ISR_End:
00AB            138            ; Restore used registers
00AB D082       139            pop dpl
00AD D083       140            pop dph
00AF D0E0       141            pop acc
00B1 D0F0       142            pop b
00B3 D0D0       143            pop psw    
00B5 32         144            reti
00B6            145   
00B6            146   ;--------------------------------------   
00B6            147   ;--------------------------------------   
00B6            148   ;--------------------------------------      
00B6            149   ;--------------------------------------      
00B6            150      
00B6            151   ISR_Timer1:
00B6 C28F       152            clr TF1 ;may not be necessary
00B8 B2A0       153            cpl P2.0
00BA B2A1       154            cpl P2.1
00BC 758DFD     155       mov TH1, #high(TIMER1_RELOAD)
00BF 758B4A     156       mov TL1, #low(TIMER1_RELOAD)
00C2 32         157            reti
00C3            158            
00C3            159   ;--------------------------------------   
00C3            160   ;--------------------------------------   
00C3            161   ;--------------------------------------      
00C3            162   ;--------------------------------------  
00C3            163   
00C3            164   Init_Timer0:     
00C3 758911     165            mov TMOD,  #00010001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
00C6 C28C       166            clr TR0 ; Disable timer 0
00C8 C28D       167            clr TF0
00CA 758C93     168       mov TH0, #high(TIMER0_RELOAD)
00CD 758A7F     169       mov TL0, #low(TIMER0_RELOAD)
00D0 D28C       170       setb TR0 ; Enable timer 0
00D2 D2A9       171       setb ET0 ; Enable timer 0 interrupt
00D4 22         172       ret
00D5            173       
00D5            174   Init_Timer1:     
00D5 758911     175            mov TMOD,  #00010001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
00D8 C28E       176            clr TR1 ; Disable timer 1
00DA C28F       177            clr TF1
00DC 758DFD     178       mov TH1, #high(TIMER1_RELOAD)
00DF 758B4A     179       mov TL1, #low(TIMER1_RELOAD)
00E2 D28E       180       setb TR1 ; Enable timer 1, dont set interrupt yet
00E4 22         181       ret
00E5            182   
00E5            183   
00E5            184   ;-------------------------------------------------------------------------------------------
00E5            185   ;-------------------------------------------------------------------------------------------
00E5            186   ;-------------------------------------------------------------------------------------------
00E5            187   ;-------------------------------------------------------------------------------------------
00E5            188   ;-------------------------------------------------------------------------------------------
00E5            189   
00E5            190   myprogram:
00E5 75817F     191            mov SP, #7FH
00E8 75E800     192            mov LEDRA,#0
00EB 759500     193            mov LEDRB,#0
00EE 759E00     194            mov LEDRC,#0
00F1 75F800     195            mov LEDG,#0
00F4 759C03     196            mov P2MOD, #00000011B ; P2.0, P2.1 are outputs.
00F7 D2A0       197            setb P2.0
00F9 D2A1       198            setb p2.1
00FB            199   
00FB 753150     200            mov sec, #50H
00FE 753259     201            mov min, #59H
0101 753311     202            mov hrs, #11H
0104 753408     203            mov meridiem, #08H
0107 C200       204            clr still12
0109            205            
0109 753500     206            mov secAlarm, #00H
010C 753600     207            mov minAlarm, #00H
010F 753712     208            mov hrsAlarm, #12H
0112 75380C     209            mov meridiemAlarm, #0CH
0115 C201       210            clr still12Alarm
0117            211   
0117 1200C3     212            lcall Init_Timer0 ;set up
011A 1200D5     213            lcall Init_Timer1
011D            214            
011D D2AF       215       setb EA  ; Enable all interrupts
011F            216   
011F            217   M0: ;clock set loop
011F            218            
011F 30EB05     219            jnb SWA.3, M0_Test
0122 1201BA     220            lcall Alarm
0125 C2E9       221            clr LEDRA.1
0127            222   M0_Test:
0127 20E942     223            jb SWA.1, A0 ;alarm set mode
012A 30E8F2     224            jnb SWA.0, M0 ;clock set mode
012D            225            
012D 20FB13     226            jb KEY.3, M1
0130 30FBFD     227       jnb KEY.3, $
0133 E533       228       mov a, hrs
0135 2401       229            add a, #1
0137 D4         230            da a
0138 F533       231            mov hrs, a
013A 12029F     232            lcall checkMeridiem
013D B41303     233       cjne A, #13H, M1
0140 753301     234       mov hrs, #1
0143            235   M1:      
0143 20FA10     236            jb KEY.2, M2
0146 30FAFD     237       jnb KEY.2, $
0149 E532       238       mov a, min
014B 2401       239            add a, #1
014D D4         240            da a
014E F532       241            mov min, a      
0150 B46003     242       cjne A, #60H, M2
0153 753200     243       mov min, #0
0156            244   M2:      
0156 20F910     245            jb KEY.1, M3
0159 30F9FD     246            jnb KEY.1, $
015C E531       247            mov a, sec
015E 2401       248            add a, #1
0160 D4         249            da a
0161 F531       250            mov sec, a
0163 B46003     251       cjne A, #60H, M3
0166 753100     252       mov sec, #0
0169            253   M3:      
0169 02011F     254            ljmp M0
016C            255            
016C            256   A0: ;alarm set loop
016C 30E9B0     257            jnb SWA.1, M0 
016F 120266     258            lcall DisplayAlarm
0172            259            
0172 20FB16     260            jb KEY.3, A1
0175            261   hrdisp:  
0175 120266     262            lcall DisplayAlarm
0178 30FBFA     263       jnb KEY.3, hrdisp
017B E537       264       mov a, hrsAlarm
017D 2401       265            add a, #1
017F D4         266            da a
0180 F537       267            mov hrsAlarm, a
0182 1202B3     268            lcall checkMeridiemAlarm
0185 B41303     269       cjne A, #13H, A1
0188 753701     270       mov hrsAlarm, #1
018B            271   A1:      
018B 20FA13     272            jb KEY.2, A2
018E            273   mindisp:
018E 120266     274            lcall DisplayAlarm
0191 30FAFA     275       jnb KEY.2, mindisp
0194 E536       276       mov a, minAlarm
0196 2401       277            add a, #1
0198 D4         278            da a
0199 F536       279            mov minAlarm, a         
019B B46003     280       cjne A, #60H, A2
019E 753600     281       mov minAlarm, #0
01A1            282   A2:      
01A1 20F913     283            jb KEY.1, A3
01A4            284   secdisp:
01A4 120266     285            lcall DisplayAlarm
01A7 30F9FA     286            jnb KEY.1, secdisp
01AA E535       287            mov a, secAlarm
01AC 2401       288            add a, #1
01AE D4         289            da a
01AF F535       290            mov secAlarm, a
01B1 B46003     291       cjne A, #60H, A3
01B4 753500     292       mov secAlarm, #0
01B7            293   A3:      
01B7 02016C     294            ljmp A0
01BA            295   
01BA            296   ;-------------------------------------------------------------------------------------------
01BA            297   ;-------------------------------------------------------------------------------------------
01BA            298   ;-------------------------------------------------------------------------------------------
01BA            299   ;-------------------------------------------------------------------------------------------
01BA            300   ; here's all the subroutines called in the main program
01BA            301   
01BA            302   Alarm:
01BA D2E9       303            setb LEDRA.1
01BC 20EF0D     304            jb SWA.7, startStateBeeps
01BF 20EE14     305            jb SWA.6, nextStateBeeps
01C2 20ED19     306            jb SWA.5, openDoorBeeps
01C5 20EC1E     307            jb SWA.4, coolEnoughBeeps
01C8 20EBEF     308            jb SWA.3, Alarm
01CB 22         309            ret
01CC            310            
01CC            311   startStateBeeps:
01CC 20EFFD     312            jb SWA.7, startStateBeeps
01CF D2EA       313            setb LEDRA.2
01D1 120231     314            lcall shortBeep
01D4 80E4       315            sjmp Alarm
01D6            316            
01D6            317   nextStateBeeps:
01D6 20EEFD     318            jb SWA.6, nextStateBeeps
01D9 120231     319            lcall shortBeep
01DC 80DC       320            sjmp Alarm
01DE            321            
01DE            322   openDoorBeeps:
01DE 20EDFD     323            jb SWA.5, openDoorBeeps
01E1 1201FD     324            lcall longBeep
01E4 80D4       325            sjmp Alarm
01E6            326            
01E6            327   coolEnoughBeeps:
01E6 20ECFD     328            jb SWA.4, coolEnoughBeeps
01E9 120231     329            lcall shortBeep         
01EC 120231     330            lcall shortBeep
01EF 120231     331            lcall shortBeep
01F2 120231     332            lcall shortBeep
01F5 120231     333            lcall shortBeep
01F8 120231     334            lcall shortBeep
01FB 80BD       335            sjmp Alarm
01FD            336   
01FD            337            
01FD            338   longBeep:
01FD 75E8FF     339            mov LEDRA, #11111111B
0200 7595FF     340            mov LEDRB, #11111111B 
0203 759E03     341            mov LEDRC, #00000011B
0206 120253     342       lcall buzzOn
0209 120259     343            lcall WaitALittle
020C 120259     344            lcall WaitALittle
020F 120259     345            lcall WaitALittle
0212 120259     346            lcall WaitALittle
0215 120259     347            lcall WaitALittle
0218 120259     348            lcall WaitALittle
021B 120259     349            lcall WaitALittle
021E 120259     350            lcall WaitALittle
0221 75E800     351            mov LEDRA, #00000000B
0224 759500     352            mov LEDRB, #00000000B 
0227 759E00     353            mov LEDRC, #00000000B
022A 120256     354       lcall buzzOff
022D 120259     355       lcall WaitALittle
0230 22         356       ret
0231            357            
0231            358   shortBeep:
0231 75E8FF     359            mov LEDRA, #11111111B
0234 7595FF     360            mov LEDRB, #11111111B
0237 759E03     361            mov LEDRC, #00000011B
023A 120253     362       lcall buzzOn
023D 120259     363            lcall WaitALittle
0240 120259     364            lcall WaitALittle
0243 75E800     365            mov LEDRA, #00000000B
0246 759500     366            mov LEDRB, #00000000B 
0249 759E00     367            mov LEDRC, #00000000B
024C 120256     368       lcall buzzOff
024F 120259     369       lcall WaitALittle
0252 22         370       ret
0253            371       
0253            372   buzzOn:
0253 D2AB       373            setb ET1
0255 22         374            ret
0256            375            
0256            376   buzzOff:
0256 C2AB       377            clr ET1
0258 22         378            ret
0259            379            
0259            380   ;For a 33.33MHz clock, one cycle takes 30ns
0259            381   WaitALittle:
0259 7A14       382            mov R2, #20
025B 79FA       383   L3: mov R1, #250
025D 78FA       384   L2: mov R0, #250
025F D8FE       385   L1: djnz R0, L1
0261 D9FA       386            djnz R1, L2
0263 DAF6       387            djnz R2, L3
0265 22         388            ret
0266            389            
0266            390   ;---------------------------for when we display the alarm        
0266            391   DisplayAlarm:
0266            392            ; Update the display
0266 90001E     393            mov dptr, #myLUT
0269            394            
0269 853891     395            mov HEX0, meridiemAlarm         
026C            396   
026C E535       397            mov a, secAlarm
026E 540F       398            anl a, #0fH
0270 93         399            movc a, @a+dptr
0271 F593       400            mov HEX2, a
0273 E535       401            mov a, secAlarm
0275 C4         402            swap a
0276 540F       403            anl a, #0fH
0278 93         404            movc a, @a+dptr
0279 F594       405            mov HEX3, a
027B            406   
027B E536       407            mov a, minAlarm
027D 540F       408            anl a, #0fH
027F 93         409            movc a, @a+dptr
0280 F58E       410            mov HEX4, a
0282 E536       411            mov a, minAlarm
0284 C4         412            swap a
0285 540F       413            anl a, #0fH
0287 93         414            movc a, @a+dptr
0288 F58F       415            mov HEX5, a
028A            416   
028A E537       417            mov a, hrsAlarm
028C 540F       418            anl a, #0fH
028E 93         419            movc a, @a+dptr
028F F596       420            mov HEX6, a
0291 E537       421            mov a, hrsAlarm
0293 20E402     422            jb acc.4, exitDispAlarm
0296 74A0       423            mov a, #0A0H    
0298            424   exitDispAlarm:
0298 C4         425            swap a
0299 540F       426            anl a, #0fH
029B 93         427            movc a, @a+dptr
029C F597       428            mov HEX7, a
029E 22         429            ret
029F            430            
029F            431   ;-------this checks and changes am/pm
029F            432   checkMeridiem:
029F E533       433            mov a, hrs
02A1 B4120C     434       cjne A, #12H, not12 ;if it isn't 12, leave
02A4            435       
02A4 20000B     436       jb still12, out ;if it is 12 but was previously 12, do nothing
02A7            437         
02A7            438   changeMeridiem: ;if it is 12 but was not previously 12 - now change meridiem
02A7 E534       439            mov a, meridiem
02A9 B2E2       440            cpl acc.2 ; changes 08H to 0CH and vice versa
02AB F534       441            mov meridiem, a         
02AD            442            ;display am/pm
02AD 853491     443            mov HEX0, meridiem
02B0            444   not12:
02B0 C200       445            clr still12
02B2            446   out:
02B2 22         447            ret
02B3            448            
02B3            449   ;-------this checks and changes am/pm for the alarm
02B3            450   checkMeridiemAlarm:
02B3 E537       451            mov a, hrsAlarm
02B5 B4120C     452       cjne A, #12H, not12Alarm ;if it isn't 12, leave
02B8            453       
02B8 2001F7     454       jb still12Alarm, out ;if it is 12 but was previously 12, do nothing
02BB            455   changeMeridiemAlarm: ;if it is 12 but was not previously 12 - now change meridiem
02BB E538       456            mov a, meridiemAlarm
02BD B2E2       457            cpl acc.2 ; changes 08H to 0CH and vice versa
02BF F538       458            mov meridiemAlarm, a    
02C1            459            ;display am/pm
02C1 853891     460            mov HEX0, meridiemAlarm         
02C4            461   not12Alarm:
02C4 C201       462            clr still12Alarm
02C6            463   outAlarm:
02C6 22         464            ret
02C7            465            
02C7            466   END
